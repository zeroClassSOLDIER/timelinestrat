"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addPermissionLevel = void 0;
var lib_1 = require("../../lib");
/**
 * Adds a permission level to the current or specified web.
 */
exports.addPermissionLevel = function (props) {
    // Return a promise
    return new Promise(function (resolve, reject) {
        // Ensure the base permissions exist
        if (SP && SP.BasePermissions) {
            // Set the context and get the role definitions
            var ctx = props.WebUrl ? new SP.ClientContext(props.WebUrl) : SP.ClientContext.get_current();
            // Set the base permissions
            var basePermissions = new SP.BasePermissions();
            var permissions = props.Permissions || [];
            for (var i = 0; i < permissions.length; i++) {
                // Set the flag
                basePermissions.set(permissions[i]);
            }
            // Create the role definition
            var roleDefInfo = new SP.RoleDefinitionCreationInformation();
            roleDefInfo.set_basePermissions(basePermissions);
            roleDefInfo.set_description(props.Description);
            roleDefInfo.set_order(props.Order);
            roleDefInfo.set_name(props.Name);
            // Add the role definition
            var roleDef_1 = ctx.get_site().get_rootWeb().get_roleDefinitions().add(roleDefInfo);
            ctx.load(roleDef_1);
            // Execute the request
            ctx.executeQueryAsync(function () {
                // Get the role definition
                lib_1.Site(props.WebUrl).RootWeb().RoleDefinitions().getById(roleDef_1.get_id()).execute(function (roleDef) {
                    // Resolve the request
                    resolve(roleDef);
                }, reject);
            }, reject);
        }
        else {
            // Reject the request
            reject("The 'SP' core library is not available.");
        }
    });
};
