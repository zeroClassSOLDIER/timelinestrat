"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataTable = void 0;
var gd_sprest_bs_1 = require("gd-sprest-bs");
// DataTables.net
var $ = require("jquery");
require("datatables.net");
require("datatables.net-bs5");
/**
 * Data Table
 */
var DataTable = /** @class */ (function () {
    // Constructor
    function DataTable(props) {
        this._datatable = null;
        this._props = null;
        // Save the properties
        this._props = props;
        // Render the table
        this.refresh(props.rows);
    }
    // Applies the datatables.net plugin
    DataTable.prototype.applyPlugin = function (table) {
        // Render the datatable
        this._datatable = $(table.el).DataTable(this._props.dtProps);
        // Call the render event
        this._props.onRendered ? this._props.onRendered(this._props.el, this._datatable) : null;
    };
    Object.defineProperty(DataTable.prototype, "datatable", {
        /** Public Interface */
        // Datatables.net object
        get: function () { return this._datatable; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataTable.prototype, "el", {
        // The data table element
        get: function () { return this._props.el; },
        enumerable: false,
        configurable: true
    });
    // Filters the status
    DataTable.prototype.filter = function (idx, value) {
        if (value === void 0) { value = ""; }
        // Set the filter
        this._datatable.column(idx).search(value, true, false).draw();
    };
    // Method to reload the data
    DataTable.prototype.refresh = function (rows) {
        // See if the datatable exists
        if (this._datatable != null) {
            // Clear the datatable
            this._datatable.clear();
            this._datatable.destroy();
            this._datatable = null;
        }
        // Clear the datatable element
        while (this._props.el.firstChild) {
            this._props.el.removeChild(this._props.el.firstChild);
        }
        // Render the data table
        var table = gd_sprest_bs_1.Components.Table({
            el: this._props.el,
            rows: rows,
            columns: this._props.columns
        });
        // Apply the plugin
        this.applyPlugin(table);
    };
    // Searches the datatable
    DataTable.prototype.search = function (value) {
        if (value === void 0) { value = ""; }
        // Search the table
        this._datatable.search(value).draw();
    };
    return DataTable;
}());
exports.DataTable = DataTable;
