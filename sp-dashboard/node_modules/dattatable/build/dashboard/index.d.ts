import { Components } from "gd-sprest-bs";
import { IFilterItem } from "./filter";
export * from "./filter";
export * from "./footer";
export * from "./header";
export * from "./navigation";
export * from "./table";
export interface IDashboardProps {
    el: HTMLElement;
    footer?: {
        items?: Components.INavbarItem[];
        itemsEnd?: Components.INavbarItem[];
        onRendering?: (props: Components.INavbarProps) => void;
        onRendered?: (el?: HTMLElement) => void;
    };
    filters?: {
        items: IFilterItem[];
        onClear?: () => void;
        onRendered?: (el?: HTMLElement) => void;
    };
    header?: {
        onRendering?: (props: Components.IJumbotronProps) => void;
        onRendered?: (el?: HTMLElement) => void;
        title?: string;
    };
    hideFilter?: boolean;
    hideFooter?: boolean;
    hideHeader?: boolean;
    hideNavigation?: boolean;
    navigation?: {
        title?: string | HTMLElement;
        items?: Components.INavbarItem[];
        itemsEnd?: Components.INavbarItem[];
        onFilterRendered?: (el: HTMLElement) => void;
        onRendering?: (props: Components.INavbarProps) => void;
        onRendered?: (el?: HTMLElement) => void;
    };
    table?: {
        columns: Components.ITableColumn[];
        dtProps?: any;
        onRendered?: (el?: HTMLElement, dt?: any) => void;
        rows?: any[];
    };
    onRendered?: (el?: HTMLElement) => void;
    useModal?: boolean;
}
/**
 * Dashboard
 */
export declare class Dashboard {
    private _dt;
    private _filters;
    private _props;
    constructor(props: IDashboardProps);
    private render;
    /**
     * Public Interface
     */
    filter(idx: number, value?: string): void;
    getFilter(key: string): Components.ICheckboxGroup;
    hideFilter(): void;
    refresh(rows: any[]): void;
    search(value?: string): void;
    setFilterValue(key: string, value?: string | string[]): void;
    showFilter(): void;
}
