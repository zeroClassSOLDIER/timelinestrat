"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Navigation = void 0;
var gd_sprest_bs_1 = require("gd-sprest-bs");
var filterSquare_1 = require("gd-sprest-bs/build/icons/svgs/filterSquare");
/**
 * Navigation
 */
var Navigation = /** @class */ (function () {
    // Constructor
    function Navigation(props) {
        this._props = null;
        // Save the properties
        this._props = props;
        // Render the navigation
        this.render();
        // Call the render event
        props.onRendered ? props.onRendered(this._props.el) : null;
    }
    // Renders the component
    Navigation.prototype.render = function () {
        // Define the default props
        var props = {
            el: this._props.el,
            brand: this._props.title,
            className: "bg-sharepoint header rounded",
            items: this._props.items,
            itemsEnd: this._props.itemsEnd,
            searchBox: {
                hideButton: true,
                onChange: this._props.onSearch,
                onSearch: this._props.onSearch
            }
        };
        // Call the rendering event
        this._props.onRendering ? this._props.onRendering(props) : null;
        // Render a navbar
        var nav = gd_sprest_bs_1.Components.Navbar(props);
        // Update the navbar color palate
        nav.el.classList.remove("navbar-light");
        nav.el.classList.add("navbar-dark");
        // See if we are showing the filter
        if (this._props.hideFilter != true) {
            // Render the filter icon
            var icon = document.createElement("div");
            icon.classList.add("filter-icon");
            icon.classList.add("nav-link");
            icon.classList.add("text-light");
            icon.style.cursor = "pointer";
            icon.appendChild((0, filterSquare_1.filterSquare)());
            this._props.onShowFilter ? icon.addEventListener("click", this._props.onShowFilter) : null;
            nav.el.firstElementChild.appendChild(icon);
            // Call the render event
            this._props.onFilterRendered ? this._props.onFilterRendered(icon) : null;
        }
    };
    return Navigation;
}());
exports.Navigation = Navigation;
