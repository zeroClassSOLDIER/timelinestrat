import { Components, Helper } from "gd-sprest-bs";
/** Create Item Properties */
export interface IItemFormCreateProps {
    onCreateEditForm?: (props: Components.IListFormEditProps) => Components.IListFormEditProps;
    onFormButtonsRendering?: (buttons: Components.IButtonProps[]) => Components.IButtonProps[];
    onGetListInfo?: (props: Helper.IListFormProps) => Helper.IListFormProps;
    onSave?: (values: any) => any | PromiseLike<any>;
    onSetFooter?: (el: HTMLElement) => void;
    onSetHeader?: (el: HTMLElement) => void;
    onUpdate?: (item?: any) => void;
    onValidation?: (values?: any) => boolean | PromiseLike<boolean>;
    useModal?: boolean;
}
/** Edit Item Properties */
export interface IItemFormEditProps {
    itemId: number;
    onCreateEditForm?: (props: Components.IListFormEditProps) => Components.IListFormEditProps;
    onFormButtonsRendering?: (buttons: Components.IButtonProps[]) => Components.IButtonProps[];
    onGetListInfo?: (props: Helper.IListFormProps) => Helper.IListFormProps;
    onSave?: (values: any) => any | PromiseLike<any>;
    onSetFooter?: (el: HTMLElement) => void;
    onSetHeader?: (el: HTMLElement) => void;
    onUpdate?: (item?: any) => void;
    onValidation?: (values?: any) => boolean | PromiseLike<boolean>;
    useModal?: boolean;
}
/** View Item Properties */
export interface IItemFormViewProps {
    itemId: number;
    onCreateViewForm?: (props: Components.IListFormDisplayProps) => Components.IListFormDisplayProps;
    onFormButtonsRendering?: (buttons: Components.IButtonProps[]) => Components.IButtonProps[];
    onGetListInfo?: (props: Helper.IListFormProps) => Helper.IListFormProps;
    onSetFooter?: (el: HTMLElement) => void;
    onSetHeader?: (el: HTMLElement) => void;
    useModal?: boolean;
}
/**
 * Item Form
 */
export declare class ItemForm {
    private static _onCreateEditForm;
    private static _onCreateViewForm;
    private static _onFormButtonsRendering;
    private static _onGetListInfo;
    private static _onSetFooter?;
    private static _onSetHeader?;
    private static _onSave;
    private static _onValidation;
    private static _updateEvent;
    static set AutoClose(value: boolean);
    private static _displayForm;
    static get DisplayForm(): Components.IListFormDisplay;
    private static _editForm;
    static get EditForm(): Components.IListFormEdit;
    private static _info;
    static get FormInfo(): Helper.IListFormResult;
    private static _controlMode;
    static get IsDisplay(): boolean;
    static get IsEdit(): boolean;
    static get IsNew(): boolean;
    private static _listName;
    static get ListName(): string;
    static set ListName(value: string);
    private static _useModal;
    static get UseModal(): boolean;
    static set UseModal(value: boolean);
    /** Public Methods */
    static close(): void;
    static create(props?: IItemFormCreateProps): void;
    static edit(props: IItemFormEditProps): void;
    static view(props: IItemFormViewProps): void;
    /** private static Methods */
    private static load;
    private static save;
    private static validate;
}
