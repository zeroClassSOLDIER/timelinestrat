"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadingDialog = void 0;
var gd_sprest_bs_1 = require("gd-sprest-bs");
/**
 * Loading Dialog
 */
var LoadingDialog = /** @class */ (function () {
    // Constructor
    function LoadingDialog() {
        // Render the canvas
        LoadingDialog.render();
    }
    Object.defineProperty(LoadingDialog, "el", {
        // Element
        get: function () { return this._el; },
        enumerable: false,
        configurable: true
    });
    // Hides the canvas
    LoadingDialog.hide = function () {
        // Update the display
        this._el.style.display = "none";
        this._elBackdrop.style.display = "none";
    };
    // Renders the canvas
    LoadingDialog.render = function () {
        var _this = this;
        // Create the backdrop element
        this._elBackdrop = document.createElement("div");
        this._elBackdrop.id = "loading-dialog-backdrop";
        this._elBackdrop.style.display = "none";
        // Create the loading dialog element
        this._el = document.createElement("div");
        this._el.id = "loading-dialog";
        this._el.classList.add("bs");
        this._el.style.display = "none";
        this._el.innerHTML = "<div></div>";
        // Ensure the body exists
        if (document.body) {
            // Append the elements
            document.body.appendChild(this._elBackdrop);
            document.body.appendChild(this._el);
        }
        else {
            // Create an event
            window.addEventListener("load", function () {
                // Append the elements
                document.body.appendChild(_this._elBackdrop);
                document.body.appendChild(_this._el);
            });
        }
        // Update the main element
        var elMain = this._el.firstChild;
        elMain.classList.add("d-flex");
        elMain.classList.add("flex-column");
        // Append the header
        this._elHeader = document.createElement("div");
        this._elHeader.classList.add("fs-4");
        this._elHeader.classList.add("p-2");
        elMain.appendChild(this._elHeader);
        // Render a spinner
        gd_sprest_bs_1.Components.Spinner({
            el: elMain,
            type: gd_sprest_bs_1.Components.SpinnerTypes.Primary
        });
        // Append the body
        this._elBody = document.createElement("div");
        this._elBody.classList.add("fs-6");
        this._elBody.classList.add("p-2");
        elMain.appendChild(this._elBody);
    };
    // Sets the body
    LoadingDialog.setBody = function (content) {
        // Clear the body
        while (this._elBody.firstChild) {
            this._elBody.removeChild(this._elBody.firstChild);
        }
        // See if content exists
        if (content) {
            // See if this is text
            if (typeof (content) == "string") {
                // Set the html
                this._elBody.innerHTML = content;
            }
            else {
                // Append the element
                this._elBody.appendChild(content);
            }
        }
    };
    // Sets the header
    LoadingDialog.setHeader = function (content) {
        // Clear the body
        while (this._elHeader.firstChild) {
            this._elHeader.removeChild(this._elHeader.firstChild);
        }
        // See if content exists
        if (content) {
            // See if this is text
            if (typeof (content) == "string") {
                // Set the html
                this._elHeader.innerHTML = content;
            }
            else {
                // Append the element
                this._elHeader.appendChild(content);
            }
        }
    };
    // Shows the canvas
    LoadingDialog.show = function () {
        // Update the display
        this._el.style.display = "";
        this._elBackdrop.style.display = "";
    };
    LoadingDialog._el = null;
    LoadingDialog._elBody = null;
    LoadingDialog._elBackdrop = null;
    LoadingDialog._elHeader = null;
    return LoadingDialog;
}());
exports.LoadingDialog = LoadingDialog;
// Create an instance of the loading dialog
new LoadingDialog();
